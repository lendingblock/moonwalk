version: 2
jobs:
  build:
    machine: true
    environment:
      BITCOIN_URL: http://test:test@localhost:18443
      LITECOIN_URL: http://test:test@localhost:19332
      BITCOIN_CASH_URL: http://test:test@localhost:18332
      ETH_URL: http://localhost:8545
      ETH_CHAIN_ID: 1
      MAIN_LND_ADDR: 0x4a6a0f44e165bb2dc9afbc7574f82d2388a52638
      MAIN_LND_PRIV: 0x869844d42d74171d1c5e71ecd8964118e68f610af94047fd1e98afb4df1c5e1b
      MAIN_ETH_ADDR: 0x4a6a0f44e165bb2dc9afbc7574f82d2388a52638
      MAIN_ETH_PRIV: 0x869844d42d74171d1c5e71ecd8964118e68f610af94047fd1e98afb4df1c5e1b
      BUFFER_ETH_PRIV: 0x869844d42d74171d1c5e71ecd8964118e68f610af94047fd1e98afb4df1c5e1b
    steps:
      - checkout
      - run: pyenv install 3.6.3 && pyenv global 3.6.3
      - run: pip3 install docker-compose
      - run:
          name: Run test nodes
          command: docker-compose up -d
      - run: sleep 5
      - run:
          name: Generate coins
          command: |
            docker-compose exec -T bitcoin bitcoin-cli -rpcport=18443 -rpcuser=test -rpcpassword=test generate 150
            docker-compose exec -T litecoin litecoin-cli -rpcport=19332 -rpcuser=test -rpcpassword=test generate 150
            docker-compose exec -T bitcoin-cash bitcoin-cli -rpcport=18332 -rpcuser=test -rpcpassword=test generate 150
      - run:
          name: Install Python dependencies
          command: |
            pip3 install -r dev/requirements.txt
            pip3 install -r dev/requirements-dev.txt
      - run:
          name: Flake8
          command: flake8
      - run:
          name: test
          command: pytest --cov
      - run:
          name: upload coverage
          command: bash <(curl -s https://codecov.io/bash)
  deploy-release:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: install-dev
          command: sudo ./dev/install-dev.sh
      - run:
          name: validate version
          command: agilekit git validate
      - run:
          name: build bundles
          command: sudo python setup.py sdist bdist_wheel
      - run:
          name: upload release
          command: twine upload dist/* --username lsbardel --password $PYPI_PASSWORD
      - run:
          name: create tag
          command: agilekit git release --yes

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-release:
          requires:
            - build
          filters:
            branches:
              only: deploy
            tags:
              ignore: /.*/
